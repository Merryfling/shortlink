services:
  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: shortlink-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-YourStrongPassword}
      MYSQL_DATABASE: db_shortlink
      MYSQL_USER: linkapp
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-YourStrongPassword}
      TZ: Asia/Shanghai
    volumes:
      - mysql_data:/var/lib/mysql
      - ./link.sql:/docker-entrypoint-initdb.d/01-link.sql:ro  # 直接挂载根目录的 SQL 文件
    ports:
      - "3306:3306"
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO
      - --max-connections=1000
      - --innodb-buffer-pool-size=256M
      - --default-time-zone=+08:00
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-YourStrongPassword}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 90s
    networks:
      - shortlink-network

  # Redis 缓存服务
  redis:
    image: redis:7.0-alpine
    container_name: shortlink-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-YourStrongPassword} --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-YourStrongPassword}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - shortlink-network

  # 短链接应用服务
  app:
    image: ghcr.io/merryfling/shortlink:latest
    container_name: shortlink-app
    restart: unless-stopped
    ports:
      - "8068:8068"
    environment:
      - TZ=Asia/Shanghai
      - JAVA_TOOL_OPTIONS=-Duser.timezone=Asia/Shanghai
      - JAVA_OPTS=${JAVA_OPTS:--Xmx1024m -Xms512m -XX:+UseG1GC -XX:MaxGCPauseMillis=200}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-YourStrongPassword}
      - SHORTLINK_DOMAIN=${SHORTLINK_DOMAIN:-localhost:8068}
    volumes:
      # 自定义配置文件挂载 - 需要确保这些文件存在
      - ./application-docker.yaml:/app/application.yaml:ro  # 应用配置
      - ./shardingsphere-config-docker.yaml:/app/shardingsphere-config.yaml:ro  # 分库分表配置
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8068/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - shortlink-network

# 数据卷
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

# 网络
networks:
  shortlink-network:
    driver: bridge
